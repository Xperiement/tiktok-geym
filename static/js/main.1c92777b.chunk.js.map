{"version":3,"sources":["components/Block.js","App.js","reportWebVitals.js","index.js"],"names":["Block","typeA","onc","onClick","className","mode","App","winPattern","useState","blocks","id","uuid","clickable","x","y","gg","showMainWindow","showScoreWindow","teamRed","useBot","state","setState","useEffect","obj","winObj","win","filter","item","length","map","eachPattern","addidas","eachCords","push","is","f","getItem","isGameFinished","prevState","updatedItems","eachItem","console","log","emptyBlock","chBlock","Math","floor","random","onceClicked","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAgBeA,G,MAbD,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACnB,OACI,qBAAKC,QAASD,EAAKE,UAAS,iBAAsB,IAAVH,EAAiB,SAAoB,IAAVA,EAAkB,QAAU,IAA/F,UACe,IAAVA,EAAiB,KAAgB,IAAVA,EAAkB,IAAM,O,OCDxDI,GAAO,EAGX,SAASC,IACP,IAAMC,EAAa,CACjB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAElB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAElB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClB,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,KAXP,EAeaC,oBAAS,WAAK,MAAO,CAC7CC,OAAQ,CACN,CAACC,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrD,CAACJ,GAAIC,iBAAQV,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,IAEvDC,GAAI,CACFC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,EACTC,QAAQ,EACRd,KAAM,UAhCG,mBAeNe,EAfM,KAeCC,EAfD,KAoCbC,qBAAU,WACR,IAAIC,EAyCN,WACE,IAAIC,EAAS,CACXC,KAAK,EACLP,SAAS,GAGX,GAEc,IAFVE,EAAMX,OAAOiB,QAAO,SAAAC,GACtB,OAA0B,IAAnBA,EAAKf,aACXgB,OAED,OADAJ,EAAON,QAAU,KACVM,EAuBT,OAjBAjB,EAAWsB,KAAI,SAAAC,GACb,IAAIC,EAAU,GAEdD,EAAYD,KAAI,SAAAG,GACdD,EAAQE,KApCd,SAAiBC,EAAIrB,EAAGC,GACtB,IAAIqB,EAAID,EAAGzB,OAAOiB,QAAO,SAAAC,GACvB,OAAOd,IAAMc,EAAKd,GAAKC,IAAMa,EAAKb,KAKpC,OAAkB,IAAfqB,EAAE,GAAGlC,MACC,GACe,IAAfkC,EAAE,GAAGlC,MACL,EAEA,KAwBQmC,CAAQhB,EAAOY,EAAU,GAAIA,EAAU,QAIpC,IAAfD,EAAQ,IAA2B,IAAfA,EAAQ,IAA2B,IAAfA,EAAQ,IACjDP,EAAOC,KAAM,EACbD,EAAON,SAAU,GACK,IAAfa,EAAQ,IAA2B,IAAfA,EAAQ,IAA2B,IAAfA,EAAQ,KACvDP,EAAOC,KAAM,MAKVD,EA1EGa,IACK,IAAZd,EAAIE,KAA+B,MAAfF,EAAIL,SACzBG,GAAS,SAAAiB,GAAS,kCACbA,GADa,IAEhBvB,GAAG,2BACEuB,EAAUvB,IADb,IAEAE,iBAAiB,EACjBC,QAASK,EAAIL,iBAIlB,CAACE,EAAMX,SAyGV,OACE,sBAAKL,WAA6B,IAAlBgB,EAAML,GAAGV,KAAgB,iBAAoC,IAAlBe,EAAML,GAAGV,KAAiB,gBAAkB,MAAvG,UACE,sBAAKD,UAAWgB,EAAML,GAAGC,eAAiB,aAAe,wBAAzD,UACE,oBAAIZ,UAAU,cAAd,qBACA,wBAAQA,UAAU,aAAaD,QAAS,WACtCkB,GAAS,SAAAiB,GAAS,kCACbA,GADa,IAEhBvB,GAAE,2BACGuB,EAAUvB,IADb,IAEAC,gBAAgB,EAChBX,MAAM,UANZ,yBAYA,wBAAQD,UAAU,aAAaD,QAAS,WACtCkB,GAAS,SAAAiB,GAAS,kCACbA,GADa,IAEhBvB,GAAE,2BACGuB,EAAUvB,IADb,IAEAC,gBAAgB,EAChBX,MAAM,EACNc,QAAQ,UAPd,iCAgBF,sBAAKf,UAAWgB,EAAML,GAAGE,gBAAkB,aAAe,wBAA1D,UACE,gCAA0B,IAArBG,EAAML,GAAGG,QAAmB,YAAkC,IAArBE,EAAML,GAAGG,QAAoB,WAAa,SAAxF,WACA,wBAAQd,UAAU,aAAaD,QAAS,WACtCkB,GAAS,SAAAiB,GAAS,MAAK,CACrB7B,OAAQ,CACN,CAACC,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,GACrE,CAACJ,GAAI4B,EAAU7B,OAAO,GAAGC,GAAIT,MAAQ,KAAMW,WAAY,EAAMC,EAAG,EAAGC,EAAE,IAEvEC,GAAI,CACFC,gBAAgB,EAChBC,iBAAiB,EACjBC,SAAS,EACTC,QAAQ,EACRd,KAAM,UAGVA,GAAO,GArBT,2BA6BDe,EAAMX,OAAOoB,KAAI,SAACF,GACjB,OACE,cAAC,EAAD,CAAqB1B,MAAO0B,EAAK1B,MAAOC,IAAK,YAtGnC,SAACyB,GAEjB,IAAIY,EAAenB,EAAMX,OAAOoB,KAAI,SAAAW,GAClC,OAAOA,EAAS9B,KAAOiB,EAAKjB,GAArB,2BAA8B8B,GAA9B,IAAwCvC,MAAOI,EAAMO,WAAW,IAAS4B,KAGlF,GAAGb,EAAKf,UAAU,CAChB,IAAuB,IAApBQ,EAAML,GAAGI,OAAgB,CAC1BsB,QAAQC,IAAI,YAEZ,IAAIC,EAAaJ,EAAab,QAAO,SAAAC,GACnC,OAA0B,IAAnBA,EAAKf,aAGVgC,EAAUD,EAAWE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAWf,SAE/Da,QAAQC,IAAIC,GACZJ,EAAeA,EAAaV,KAAI,SAAAW,GAC9B,OAAOA,EAAS9B,KAAOkC,EAAQlC,GAAxB,2BAAiC8B,GAAjC,IAA2CvC,OAAO,EAAOW,WAAW,IAAS4B,UAItFnC,GAAQA,EAGVgB,GAAS,SAAAiB,GAAS,kCACbA,GADa,IAEhB7B,OAAQ8B,EACRxB,GAAG,2BACEuB,EAAUvB,IADb,IAEAV,KAAMA,UAwE6C2C,CAAYrB,KAAnDA,EAAKjB,UAO3BJ,EAAI2C,aAAe,GAIJ3C,QCjOA4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c92777b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Block = ({typeA, onc}) => {\r\n    return (\r\n        <div onClick={onc} className ={`block ${typeA === true ? \"sideA\" : typeA === false ? \"sideB\" : \"\"}`}>\r\n            {typeA === true ? 'x' : typeA === false ? 'O' : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nBlock.propTypes = {\r\n    typeA : PropTypes.string,\r\n    onc : PropTypes.func\r\n}\r\n\r\nexport default Block\r\n","import './App.css';\nimport Block from './components/Block'\nimport {useState, useEffect} from 'react'\nimport {uuid} from 'uuidv4'\n\nlet mode = true\n\n\nfunction App() {\n  const winPattern = [\n    [[0,0], [0,1], [0,2]],\n    [[1,0], [1,1], [1,2]],\n    [[2,0], [2,1], [2,2]],\n\n    [[0,0], [1,0], [2,0]],\n    [[0,1], [1,1], [2,1]],\n    [[0,2], [1,2], [2,2]],\n\n    [[0,0], [1,1], [2,2]],\n    [[2,0], [1,1], [0,2]],\n  ]\n\n\n  const [state, setState] = useState(()=>{return {\n    blocks: [\n      {id: uuid(), typeA : null, clickable : true, x: 0, y:0},\n      {id: uuid(), typeA : null, clickable : true, x: 0, y:1},\n      {id: uuid(), typeA : null, clickable : true, x: 0, y:2},\n      {id: uuid(), typeA : null, clickable : true, x: 1, y:0},\n      {id: uuid(), typeA : null, clickable : true, x: 1, y:1},\n      {id: uuid(), typeA : null, clickable : true, x: 1, y:2},\n      {id: uuid(), typeA : null, clickable : true, x: 2, y:0},\n      {id: uuid(), typeA : null, clickable : true, x: 2, y:1},\n      {id: uuid(), typeA : null, clickable : true, x: 2, y:2}\n    ],\n    gg: {\n      showMainWindow: true,\n      showScoreWindow: false,\n      teamRed: false,\n      useBot: false,\n      mode: null\n    }\n  }})\n\n  useEffect(() => {\n    let obj = isGameFinished()\n    if(obj.win === true || obj.teamRed == null){\n      setState(prevState => ({\n        ...prevState,\n        gg: {\n          ...prevState.gg,\n          showScoreWindow: true,\n          teamRed: obj.teamRed\n        }\n      }))\n    }\n  }, [state.blocks])\n\n  function mapIndex(x, y){\n    if(x === 0 && y === 0) return 0\n    if(x === 0 && y === 1) return 1\n    if(x === 0 && y === 2) return 2\n    if(x === 1 && y === 0) return 3\n    if(x === 1 && y === 1) return 4\n    if(x === 1 && y === 2) return 5\n    if(x === 2 && y === 0) return 6\n    if(x === 2 && y === 1) return 7\n    if(x === 2 && y === 2) return 8\n  }\n\n  function getItem(is, x, y){\n    let f = is.blocks.filter(item=>{\n      return x === item.x && y === item.y\n    })\n\n    //console.log(f[0])\n\n    if(f[0].typeA === true){\n      return 1\n    }else if(f[0].typeA === false){\n      return 0\n    }else{\n      return null\n    }\n  }\n\n  function isGameFinished(){\n    let winObj = {\n      win: false,\n      teamRed: false\n    }\n\n    if (state.blocks.filter(item=>{\n      return item.clickable === true\n    }).length === 0){\n      winObj.teamRed = null\n      return winObj\n    }\n\n    \n\n    // eslint-disable-next-line\n    winPattern.map(eachPattern => {\n      let addidas = []\n      // eslint-disable-next-line\n      eachPattern.map(eachCords => {\n        addidas.push(getItem(state, eachCords[0], eachCords[1]))\n      })\n\n      \n      if(addidas[0] === 1 && addidas[1] === 1 && addidas[2] === 1){\n        winObj.win = true\n        winObj.teamRed = true\n      }else if(addidas[0] === 0 && addidas[1] === 0 && addidas[2] === 0){\n        winObj.win = true\n      }\n      \n    })\n\n    return winObj\n  }\n\n\n\n  let onceClicked = (item) => {\n\n    let updatedItems = state.blocks.map(eachItem=>{\n      return eachItem.id === item.id ? {...eachItem, typeA: mode, clickable: false} : eachItem\n    })\n\n    if(item.clickable){\n      if(state.gg.useBot === true){\n        console.log('Entering')\n        //console.log(updatedItems)\n        let emptyBlock = updatedItems.filter(item=>{\n          return item.clickable === true\n        })\n\n        let chBlock = emptyBlock[Math.floor(Math.random() * emptyBlock.length)]\n\n        console.log(emptyBlock)\n        updatedItems = updatedItems.map(eachItem=>{\n          return eachItem.id === chBlock.id ? {...eachItem, typeA: false, clickable: false} : eachItem\n        })\n\n      }else{\n        mode = !mode\n      }\n\n      setState(prevState => ({\n        ...prevState,\n        blocks: updatedItems,\n        gg:{\n          ...prevState.gg,\n          mode: mode\n        }\n      }))\n    }\n  }\n\n\n  return (\n    <div className={state.gg.mode === true ? \"App teamAmode\" : state.gg.mode === false ? \"App teamBmode\" : \"App\"}>\n      <div className={state.gg.showMainWindow ? \"mainWindow\" : \"mainWindow hideWindow\"}>\n        <h1 className=\"gameHeading\">TIK TOK</h1>\n        <button className=\"playButton\" onClick={()=>{\n          setState(prevState => ({\n            ...prevState,\n            gg : {\n              ...prevState.gg,\n              showMainWindow: false,\n              mode: true\n            }\n          }))\n\n        }}>Multiplayer</button>\n\n        <button className=\"playButton\" onClick={()=>{\n          setState(prevState => ({\n            ...prevState,\n            gg : {\n              ...prevState.gg,\n              showMainWindow: false,\n              mode: true,\n              useBot: true\n            }\n          }))\n\n        }}>Playing with bot</button>\n      </div>\n\n\n\n      <div className={state.gg.showScoreWindow ? \"mainWindow\" : \"mainWindow hideWindow\"}>\n        <h1>{state.gg.teamRed === true ? 'Player A' : state.gg.teamRed === false ? 'Player B' : \"No one\"} wins</h1>\n        <button className=\"playButton\" onClick={()=>{\n          setState(prevState => ({\n            blocks: [\n              {id: prevState.blocks[0].id, typeA : null, clickable : true, x: 0, y:0},\n              {id: prevState.blocks[1].id, typeA : null, clickable : true, x: 0, y:1},\n              {id: prevState.blocks[2].id, typeA : null, clickable : true, x: 0, y:2},\n              {id: prevState.blocks[3].id, typeA : null, clickable : true, x: 1, y:0},\n              {id: prevState.blocks[4].id, typeA : null, clickable : true, x: 1, y:1},\n              {id: prevState.blocks[5].id, typeA : null, clickable : true, x: 1, y:2},\n              {id: prevState.blocks[6].id, typeA : null, clickable : true, x: 2, y:0},\n              {id: prevState.blocks[7].id, typeA : null, clickable : true, x: 2, y:1},\n              {id: prevState.blocks[8].id, typeA : null, clickable : true, x: 2, y:2}\n            ],\n            gg: {\n              showMainWindow: true,\n              showScoreWindow: false,\n              teamRed: false,\n              useBot: false,\n              mode: null\n            }\n          }))\n          mode = true\n\n\n        }}>Play again</button>\n      </div>\n\n\n\n      {state.blocks.map((item) =>{\n        return(\n          <Block key={item.id} typeA={item.typeA} onc={()=> {onceClicked(item);}}/>\n        )\n      })}\n    </div>\n  );\n}\n\nApp.defaultProps = {\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}